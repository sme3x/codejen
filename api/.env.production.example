# ===================================================
#  Application Configuration
# ===================================================

# APP_NAME: Application name which will be used for prefixes, notifications,
# titles and any other places where the app name is required
# Example: CodeDjen
# APP_NAME=CodeDjen

# APP_ENV: Application environment
# Application environment is used to determine the environment of the app
# Possible values: local, development, production
APP_ENV=production

# APP_KEY: Application key
# Application key is used for encryption and hashing and generated by laravel
APP_KEY=

# APP_DEBUG: Application debug mode
# Application debug mode is used to determine whether the application is in
# debug mode or not
# Possible values: true, false
APP_DEBUG=false

# APP_URL: Application URL
# Application URL is used to determine the url of the api (backend) service.
# Used for generating links
# Example: http://codedjen.local:8000
# APP_URL=http://ai-generator.local:8000

# UI_URL: UI URL
# UI URL is used to determine the url of the ui (frontend) service.
# Used for generating links
# Example: http://codedjen.local:5000
# UI_URL=http://ai-generator.local:5000

# ===================================================
#  Logging Configuration
# ===================================================

# LOG_CHANNEL: Logging channel
# Logging channel is used to determine the channel where the logs will be stored
# Possible values in api/config/logging.php
# LOG_CHANNEL=stack

# LOG_DEPRECATIONS_CHANNEL: Deprecations logging channel
# Deprecations logging channel is used to determine the channel where the
# deprecations logs will be stored
# Possible values in api/config/logging.php
# LOG_DEPRECATIONS_CHANNEL=null

# LOG_LEVEL: Logging level
# Logging level is used to determine the level of logs that will be stored
# Possible values: emergency, alert, critical, error, warning, notice, info, debug
# LOG_LEVEL=debug

# ===================================================
# Database Configuration
# ===================================================

# DB_CONNECTION: Database connection
# Database connection is used to determine the database connection driver
# Possible values: mysql, pgsql, sqlite, sqlsrv
DB_CONNECTION=sqlite

# DB_HOST: Database host
# Database host is used to determine the database host
# Example: localhost
# DB_HOST=localhost

# DB_PORT: Database port
# Database port is used to determine the database port
# Example: 3306
# DB_PORT=

# DB_DATABASE: Database name
# Database name is used to determine the database name
# Example: codedjen
DB_DATABASE=/var/www/html/storage/database/database.sqlite

# DB_USERNAME: Database username
# Username of the database user that will be used to connect to the database
# Example: root
# DB_USERNAME=

# DB_PASSWORD: Database password
# Password of the database user that will be used to connect to the database
# Example: root
# DB_PASSWORD=

# ===================================================
# Miscellaneous Configuration
# ===================================================

# BROADCAST_DRIVER: Broadcast driver
# Broadcast driver is used to determine the broadcast driver
# Possible values: log, pusher, redis, null
# BROADCAST_DRIVER=log

# CACHE_DRIVER: Cache driver
# Cache driver is used to determine the cache driver
# Possible values: apc, array, database, file, memcached, redis
# CACHE_DRIVER=file

# FILESYSTEM_DRIVER: Filesystem driver
# Filesystem driver is used to determine the filesystem driver
# Possible values: local, public, s3
# FILESYSTEM_DISK=local

# QUEUE_CONNECTION: Queue connection
# Queue connection is used to determine the queue connection driver
# Possible values: sync, database, beanstalkd, redis, null
# QUEUE_CONNECTION=sync

# SESSION_DRIVER: Session driver
# Session driver is used to determine the session driver
# Possible values: file, cookie, database, apc, memcached, redis, array
# SESSION_DRIVER=file

# SESSION_LIFETIME: Session lifetime
# Session lifetime is used to determine the session lifetime in minutes
# Example: 120
# SESSION_LIFETIME=120

# ===================================================
# Mail Configuration
# ===================================================

# MAIL_MAILER: Mail mailer
# Mail mailer is used to determine the mail driver
# Possible values: smtp, sendmail, mail, array, log, null
# MAIL_MAILER=smtp

# MAIL_HOST: Mail host
# Mail host is used to determine the mail host
# Example: smtp.mailtrap.io
# MAIL_HOST=smtp.mailgun.org

# MAIL_PORT: Mail port
# Mail port is used to determine the mail port
# Example: 2525
# MAIL_PORT=587

# MAIL_USERNAME: Mail username
# Mail server user usrname
# Example: someone@something.some
# MAIL_USERNAME=null

# MAIL_PASSWORD: Mail password
# Mail server user password
# Example: password
# MAIL_PASSWORD=null

# MAIL_ENCRYPTION: Mail encryption
# Mail encryption is used to determine the mail encryption
# Possible values: tls, ssl, null
# MAIL_ENCRYPTION=null

# MAIL_FROM_ADDRESS: Mail from address
# The default email address that will be shown as the sender of the email
# Example: test@example.com
# MAIL_FROM_ADDRESS="noreply@example.com"

# MAIL_FROM_NAME: Mail from name
# The default name that will be shown as the sender of the email
# Example: <NAMESPACE>
# MAIL_FROM_NAME="${APP_NAME}"

# ===================================================
# Auth Configuration
# ===================================================
# TODO: Make sure these are configured in docker-compose

# SANCTUM_STATEFUL_DOMAINS: Sanctum stateful domains
# Frontend domain with port and subdomains
# Example: localhost
SANCTUM_STATEFUL_DOMAINS=exmaple.com

# SESSION_DOMAIN: Session domain
# Session domain is used to determine the domain of the session
# No subdomain or port here
SESSION_DOMAIN=example.com
